[{"grab":"## Volumes & Bind Mount","views":"**Anonymous volume** - `docker run -v /app/data`\n\n\n**Named Volume** - `docker run -v data:/app/data\n\n\n**Bind Mount** - `docker run -v /path/to/code:/app/code`","tags":["docker"]},{"grab":"## Volumes comparison","views":" Anonympus\n\n- can not be shared accross container\n- removes on container delete\n\n\nNamed volumes\n\n- shared across containers\n- can be re-used for some container\n- survives container shutdown / restart\n- not tied to one specific container\n\nBind Mounts\n\n- location on host file\n- survives container shutdown","tags":["docker"]},{"grab":"## Volume command","views":"\n`docker volume ls` shows anonymous and named volume\n\n`docker volume create <volume-name>` and can be assigned to a container\n\n\n`docker volume  inspect <name>` - to see the cotainer its mount on and the read/write option\n\n`docker volume rm <name>` to remove a volume\n\n`docker volume prune` - to remove all unuased volumes","tags":["docker"]},{"grab":"## Volume command","views":"\n`docker volume ls` shows anonymous and named volume\n\n`docker volume create <volume-name>` and can be assigned to a container\n\n\n`docker volume  inspect <name>` - to see the cotainer its mount on and the read/write option\n\n`docker volume rm <name>` to remove a volume\n\n`docker volume prune` - to remove all unuased volumes","tags":["docker"]},{"grab":"## ARGuments and ENViroment variables\n\n","views":"### ARGS\n\n- available inside docker and not accesible in cmd or any application code\n\n- applicable to image via `--build-arg`\n\n```\nARG DEFAULT_URL = \"/\"\n\nENV URL  DEFAULT_URL\n```\n\n### ENV\n\n- available inside dockerfile and in application code\n- applicable inside container `docker run .... --env` or `docker run --env-file`","tags":["docker"]}]